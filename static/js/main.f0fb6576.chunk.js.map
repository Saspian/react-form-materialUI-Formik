{"version":3,"sources":["apolloClient.js","Components/Signup/Component/index.js","Components/Signup/index.js","Components/Login/Component/index.js","Components/Login/index.js","App.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","useStyles","makeStyles","paperSize","width","height","padding","textFieldYaxis","marginTop","header","margin","alignText","textTransform","textAlign","color","footer","fontSize","position","bottom","transform","signUpValue","signUpError","signUpTouch","signUpSubmitHandler","signUpChangeHandler","signUpBlurHandler","isSubmitting","classes","Grid","container","item","sm","xl","className","xs","direction","justify","alignItems","src","alt","style","Paper","elevation","autoComplete","onSubmit","TextField","name","required","id","type","value","onChange","onBlur","label","fullWidth","helperText","error","email","password","repassword","Button","variant","size","disabled","to","validationSchema","Yup","min","when","is","val","length","then","oneOf","formik","useFormik","initialValues","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","console","log","errors","touched","handleSubmit","handleChange","handleBlur","loginValue","loginError","loginTouch","loginSubmitHandler","loginChangeHandler","loginBlurHandler","loginSubmitting","App","path","exact","component","Signup","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0fb6576.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/react-hooks';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:5000/graphql',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { TextField, Grid, Paper, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.scss';\r\n\r\nconst useStyles = makeStyles({\r\n  paperSize: {\r\n    width: '75%',\r\n    height: '50%',\r\n    padding: '0px 20px 20px 20px',\r\n  },\r\n  textFieldYaxis: {\r\n    marginTop: '6%',\r\n  },\r\n  header: {\r\n    margin: 0,\r\n  },\r\n  alignText: {\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n    margin: 0,\r\n    color: '#111',\r\n  },\r\n  footer: {\r\n    fontSize: '14px',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    transform: 'translate(0,-50%)',\r\n  },\r\n});\r\n\r\nexport default ({\r\n  signUpValue,\r\n  signUpError,\r\n  signUpTouch,\r\n  signUpSubmitHandler,\r\n  signUpChangeHandler,\r\n  signUpBlurHandler,\r\n  isSubmitting,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={8} xl={9} className=\"display_image\"></Grid>\r\n      <Grid item xs={12} sm={4} xl={3} className=\"login_side\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className=\"login_content\"\r\n        >\r\n          <img src=\"/images/opinionlogo.jpg\" alt=\"opinion of nepal logo\" />\r\n          <h4 className={classes.header}>\r\n            <i style={{ color: '#00c159' }}>Opinion of Nepal</i>\r\n          </h4>\r\n          <h1 className={classes.alignText}>Sign Up</h1>\r\n          <Paper className={classes.paperSize} elevation={0}>\r\n            <form\r\n              autoComplete=\"off\"\r\n              className=\"login_Box\"\r\n              onSubmit={signUpSubmitHandler}\r\n            >\r\n              <TextField\r\n                name=\"name\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={signUpValue.name}\r\n                onChange={signUpChangeHandler}\r\n                onBlur={signUpBlurHandler}\r\n                label=\"Name\"\r\n                fullWidth={true}\r\n                helperText={\r\n                  signUpTouch.name && signUpError.name\r\n                    ? `${signUpError.name}`\r\n                    : ''\r\n                }\r\n                error={!!(signUpError.name && signUpTouch.name)}\r\n              />{' '}\r\n              <br />\r\n              <TextField\r\n                name=\"email\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                value={signUpValue.email}\r\n                onChange={signUpChangeHandler}\r\n                onBlur={signUpBlurHandler}\r\n                fullWidth={true}\r\n                helperText={\r\n                  signUpTouch.email && signUpError.email\r\n                    ? `${signUpError.email}`\r\n                    : ''\r\n                }\r\n                error={!!(signUpError.email && signUpTouch.email)}\r\n              />{' '}\r\n              <br />\r\n              <TextField\r\n                name=\"password\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                value={signUpValue.password}\r\n                onChange={signUpChangeHandler}\r\n                onBlur={signUpBlurHandler}\r\n                fullWidth={true}\r\n                helperText={\r\n                  signUpTouch.password && signUpError.password\r\n                    ? `${signUpError.password}`\r\n                    : ''\r\n                }\r\n                error={!!(signUpError.password && signUpTouch.password)}\r\n              />{' '}\r\n              <br />\r\n              <TextField\r\n                name=\"repassword\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"repassword\"\r\n                type=\"password\"\r\n                label=\"Confirm Password\"\r\n                value={signUpValue.repassword}\r\n                onChange={signUpChangeHandler}\r\n                onBlur={signUpBlurHandler}\r\n                fullWidth={true}\r\n                helperText={\r\n                  signUpTouch.repassword && signUpError.repassword\r\n                    ? `${signUpError.repassword}`\r\n                    : ''\r\n                }\r\n                error={!!(signUpError.repassword && signUpTouch.repassword)}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                id=\"signup_button\"\r\n                type=\"submit\"\r\n                fullWidth={true}\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n            <p className=\"already_signup\">\r\n              Have an account?&nbsp;\r\n              <Link className=\"links\" to=\"/login\">\r\n                Log in now\r\n              </Link>\r\n            </p>\r\n          </Paper>\r\n          <span className={classes.footer}>\r\n            Copyright &copy; Illion So. 2020\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Signup from './Component/index';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default () => {\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(3, 'Name is too short - should be 3 chars minimum')\r\n      .required('No name provided'),\r\n    email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('No email provided'),\r\n    password: Yup.string()\r\n      .min(8, 'Password is too short - should be 8 chars minimum')\r\n      .required('No password provided'),\r\n    repassword: Yup.string()\r\n      .required('Please confirm your password')\r\n      .when('password', {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref('password')],\r\n          \"Password didn't match\"\r\n        ),\r\n      }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      repassword: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      alert(JSON.stringify(values, null, 2));\r\n      console.log('Values: ', values);\r\n    },\r\n    validationSchema,\r\n  });\r\n  return (\r\n    <>\r\n      {/* <Formik    \r\n         onSubmit={(data, { setSubmitting, resetForm }) => {\r\n           console.log(data);\r\n         }}\r\n      > */}\r\n      <Signup\r\n        signUpValue={formik.values}\r\n        signUpError={formik.errors}\r\n        signUpTouch={formik.touched}\r\n        signUpSubmitHandler={formik.handleSubmit}\r\n        signUpChangeHandler={formik.handleChange}\r\n        signUpBlurHandler={formik.handleBlur}\r\n      />\r\n      {/* </Formik> */}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { TextField, Grid, Paper, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.scss';\r\n\r\nconst useStyles = makeStyles({\r\n  paperSize: {\r\n    width: '75%',\r\n    height: '50%',\r\n    padding: '0px 20px 20px 20px',\r\n  },\r\n  textFieldYaxis: {\r\n    marginTop: '6%',\r\n  },\r\n  header: {\r\n    margin: 0,\r\n  },\r\n  alignText: {\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n    margin: 0,\r\n    color: '#111',\r\n  },\r\n  footer: {\r\n    fontSize: '14px',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    transform: 'translate(0,-50%)',\r\n  },\r\n});\r\n\r\nexport default ({\r\n  loginValue,\r\n  loginError,\r\n  loginTouch,\r\n  loginSubmitHandler,\r\n  loginChangeHandler,\r\n  loginBlurHandler,\r\n  isSubmitting,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={8} xl={9} className=\"display_image\"></Grid>\r\n      <Grid item xs={12} sm={4} xl={3} className=\"login_side\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className=\"login_content\"\r\n        >\r\n          <img src=\"/images/opinionlogo.jpg\" alt=\"opinion of nepal logo\" />\r\n          <h4 className={classes.header}>\r\n            <i style={{ color: '#00c159' }}>Opinion of Nepal</i>\r\n          </h4>\r\n          <h1 className={classes.alignText}>Sign Up</h1>\r\n          <Paper className={classes.paperSize} elevation={0}>\r\n            <form\r\n              autoComplete=\"off\"\r\n              className=\"login_Box\"\r\n              onSubmit={loginSubmitHandler}\r\n            >\r\n              <TextField\r\n                name=\"email\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={loginValue.email}\r\n                onChange={loginChangeHandler}\r\n                onBlur={loginBlurHandler}\r\n                label=\"Email\"\r\n                fullWidth={true}\r\n                helperText={\r\n                  loginTouch.email && loginError.email\r\n                    ? `${loginError.email}`\r\n                    : ''\r\n                }\r\n                error={!!(loginError.email && loginTouch.email)}\r\n              />{' '}\r\n              <br />\r\n              <TextField\r\n                name=\"password\"\r\n                className={classes.textFieldYaxis}\r\n                required\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={loginValue.password}\r\n                onChange={loginChangeHandler}\r\n                onBlur={loginBlurHandler}\r\n                label=\"Password\"\r\n                fullWidth={true}\r\n                helperText={\r\n                  loginTouch.password && loginError.password\r\n                    ? `${loginError.password}`\r\n                    : ''\r\n                }\r\n                error={!!(loginError.password && loginTouch.password)}\r\n              />{' '}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                id=\"signup_button\"\r\n                type=\"submit\"\r\n                fullWidth={true}\r\n                disabled={isSubmitting}\r\n              >\r\n                Login\r\n              </Button>\r\n            </form>\r\n            <p className=\"already_signup\">\r\n              Don't have an account?&nbsp;\r\n              <Link className=\"links\" to=\"/signup\">\r\n                Sign Up\r\n              </Link>\r\n            </p>\r\n          </Paper>\r\n          <span className={classes.footer}>\r\n            Copyright &copy; Illion So. 2020\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Login from './Component/index';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default () => {\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('No email provided'),\r\n    password: Yup.string()\r\n      .min(8, 'Password is too short - should be 8 chars minimum')\r\n      .required('No password provided'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: async (values) => {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      alert(JSON.stringify(values, null, 2));\r\n      console.log('Values: ', values);\r\n    },\r\n    validationSchema,\r\n  });\r\n  return (\r\n    <>\r\n      {/* <Formik    \r\n         onSubmit={(data, { setSubmitting, resetForm }) => {\r\n           console.log(data);\r\n         }}\r\n      > */}\r\n      <Login\r\n        loginValue={formik.values}\r\n        loginError={formik.errors}\r\n        loginTouch={formik.touched}\r\n        loginSubmitHandler={formik.handleSubmit}\r\n        loginChangeHandler={formik.handleChange}\r\n        loginBlurHandler={formik.handleBlur}\r\n        loginSubmitting={formik.isSubmitting}\r\n      />\r\n      {/* </Formik> */}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from './apolloClient';\n\n//IMPORTING COMPONENTS\nimport Signup from './Components/Signup';\nimport Login from './Components/Login';\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Route path=\"/signup\" exact component={Signup} />\n        <Route path=\"/login\" exact component={Login} />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}